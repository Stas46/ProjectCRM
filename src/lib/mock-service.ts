/**
 * Утилита для создания сервисов с автоматическим переключением между реальной и мок-реализацией
 * Это полезно во время разработки, когда вы еще не готовы подключать реальные API
 * или когда вы хотите тестировать без внешних зависимостей
 */

/**
 * Создает сервис, который автоматически переключается между реальной и мок-реализацией
 * @param condition - Функция, которая определяет, следует ли использовать реальную реализацию
 * @param realServiceFactory - Фабрика для создания реальной реализации сервиса
 * @param mockService - Мок-реализация сервиса
 * @returns Экземпляр сервиса (реальный или мок в зависимости от условия)
 */
export function createMockService<T>(
  condition: () => boolean,
  realServiceFactory: () => T,
  mockService: T
): T {
  try {
    // Если условие выполняется, используем реальную реализацию
    if (condition()) {
      return realServiceFactory();
    }
  } catch (error) {
    console.warn('Ошибка при создании реального сервиса, используется мок:', error);
  }
  
  // В противном случае или при ошибке используем мок-реализацию
  return mockService;
}

/**
 * Создает промис, который разрешается через указанное время
 * Полезно для имитации задержки API в мок-реализациях
 * @param ms - Задержка в миллисекундах
 * @returns Promise, который разрешится через указанное время
 */
export function delay(ms: number): Promise<void> {
  return new Promise(resolve => setTimeout(resolve, ms));
}